'scopeName': 'source.kvn'
'name': 'Kirinnee Visual Novel'
'fileTypes': ['kvn']

'patterns': [



    {
        'match': '\\b(declare|dec|macro)\\s+\\b([a-zA-Z0-9,]+)\\s+\\b(as)\\s+\\b(stage|character)'
        'captures':
            '1':
                'name': 'keyword.control.kvn'
            '2':
                'name': 'entity.name.function.kvn'
            '3':
                'name' : 'keyword.control.kvn'
            '4':
                'name' : 'gameobj.kvn'
    },
    {
        'match':'\\b(macro)\\s+\\b([a-zA-Z0-9]+)\\s([^\\n]+)\\n'
        'captures':
            '1':
                'name': 'keyword.control.kvn'
            '2':
                'name': 'entity.name.function.kvn'
            '3':
                'name': 'macro.args.kvn'
    },
    {
        'match' : '\\b(scene)\\s+\\b([a-zA-Z0-9_]+)\\s+\\b([a-zA-Z0-9_]+)'
        'captures' :
            '1':
                'name': 'object.scene.kvn'
            '2':
                'name': 'name.scene.kvn'
            '3':
                'name': 'id.scene.kvn'
    },
    {
        'match': '[\\s|\\t]+([a-zA-Z0-9,/_]+)\\s+[a-zA-Z0-9]+\\s((\\s*([a-zA-Z]+)\\s*(=)\\s*([^=]+)(\\s+|$))|([^=]+)(\\s|$))'
        'captures':
            '1':
                'name' :'action.equal.kvn'

            '4':
                'name': 'key.kvn'
            '5':
                'name' : 'action.equal.kvn'
            '6':
                'name':'action.value.kvn'
            '8':
                'name':'action.value.kvn'
    },
    {
        'match' : 'true|false'
        'name' : 'action.boolean.kvn'
    },
    {
        'match': '\\s*(let)\\s+\\b([^\\s]+)\\s+\\b(be)\\s+\\b([^\\s]+)\\s+\\b(as)\\s+\\b(string|number|object|boolean|null)'
        'captures':
            '1':
                'name': 'keyword.control.kvn'
            '3':
                'name': 'keyword.control.kvn'
            '5':
                'name': 'keyword.control.kvn'
            '6':
                'name': 'gameobj.kvn'

    },
    {
        'match' : '\\s*mod'
        'name' : 'keyword.control.kvn'
    },
    {
        'match' : 'frame'
        'name' : 'object.frame.kvn'
    },
    {
        'match' : '.*(//[^\n]*)'
        'name' : 'comment.line.double-slash'
    },
    {
        'match': '\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))\\b'
        'name': 'constant.numeric.mylanguage'
    },
    {
        'match': '^[\\s\\t]*[0-9a-zA-Z,/]+'
        'name': 'action.equal.kvn'
    }

]
